@page "/users"
@rendermode InteractiveServer
@using LabbClassLibrary
<PageTitle>Users</PageTitle>
<style>
    tr:hover.user-tr {
        background-color: lightgray;
    }
</style>

<h3>Current users</h3>
<p>(click user to see Todos)</p>

@if (_viewModel.Users.Count < 1 && _viewModel.UserDataErrorMessage == null)
{
    <p><em>Fetching User Information...</em></p>
}
else if (_viewModel.UserDataErrorMessage != null)
{
    <p>@_viewModel.UserDataErrorMessage</p>
}
else
{
    @if (_viewModel.UserIndexOutOfRangeMessage != null)
    {
        <p>@_viewModel.UserIndexOutOfRangeMessage</p>
    }

    <InputSelect @bind-Value="_viewModel.UserFilter.SearchOption">
        <option value="@UserProperty.Name">Search by Name</option>
        <option value="@UserProperty.City">Search by City</option>
    </InputSelect>
    <input id="search" @bind-value="_viewModel.UserFilter.SearchTerm" @oninput=OnSearchInput />
    <br />

    <InputSelect @bind-Value="_viewModel.UserFilter.SortOption" @bind-Value:after=_viewModel.Filter>
        <option value="@UserProperty.Name">Sort by Name</option>
        <option value="@UserProperty.ID">Sort by ID</option>
    </InputSelect>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>City</th>
                <th>Street</th>
                <th>Zip Code</th>
                <th>Company</th>
                <th>Company Catchphrase</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in _viewModel.FilteredUsers)
            {
                <tr class="user-tr" @onclick="() => _viewModel.ShowHideCurrentUsersToDos(user)" style="cursor: pointer;">
                    <td>@user.ID</td>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                    <td>@user.Address.City</td>
                    <td>@user.Address.Street</td>
                    <td>@user.Address.ZipCode</td>
                    <td>@user.Company.Name</td>
                    <td>@user.Company.CatchPhrase</td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" @onclick=_viewModel.ShowAll>Show All</button>
    <button type="button" @onclick=_viewModel.ShowLess>Show Less</button>
    <br />

    @if (_viewModel.ShowToDos)
    {
        <Todos CurrentUser="_viewModel.UserWithShownTodos" DataAccess="_viewModel.DataAccess"></Todos>
    }
}

@code {
    private UsersViewModel _viewModel = new UsersViewModel(new ApiDataAccess());

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        await _viewModel.SetUserDataAsync();
        _viewModel.ShowLess();
    }

    private void OnSearchInput(ChangeEventArgs e)
    {
        if (e.Value != null)
        {
            _viewModel.UserFilter.SearchTerm = e.Value.ToString() ?? string.Empty;
        }
        _viewModel.Filter();
    }
}
