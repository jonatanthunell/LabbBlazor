@page "/users"
@rendermode InteractiveServer
<h3>Users</h3>

@if (_users == null)
{
    <p><em>Fetching User Information...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>City</th>
                <th>Street</th>
                <th>Zip Code</th>
                <th>Company</th>
                <th>Company Catchphrase</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < _shownUsers; i++)
            {
                <tr>
                    <td>@_users[i].ID</td>
                    <td>@_users[i].Name</td>
                    <td>@_users[i].Email</td>
                    <td>@_users[i].Address.City</td>
                    <td>@_users[i].Address.Street</td>
                    <td>@_users[i].Address.ZipCode</td>
                    <td>@_users[i].Company.Name</td>
                    <td>@_users[i].Company.CatchPhrase</td>
                </tr>
            }
        </tbody>
    </table>
    <button type="button" @onclick=ShowAllEventHandler>Show All</button>
}

@code {
    private List<User>? _users;
    private int _shownUsers = 0;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);

        SampleDataAccess dataAccess = new SampleDataAccess();
        _users = dataAccess.GetUsers().OrderBy(x => x.Name).ToList();
        _shownUsers = 5;
    }
    private void ShowAllEventHandler()
    {
        _shownUsers = (_users != null) ? _users.Count : 0;
    }
}
